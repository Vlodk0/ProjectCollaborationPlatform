// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectCollaborationPlatform.DAL.Data.DataAccess;

#nullable disable

namespace ProjectCollaborationPlatform.Data.Migrations
{
    [DbContext(typeof(ProjectPlatformContext))]
    [Migration("20240217174556_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Board", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectID")
                        .IsUnique();

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.DeveloperTechnology", b =>
                {
                    b.Property<Guid>("DeveloperID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TechnologyID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DeveloperID", "TechnologyID");

                    b.HasIndex("TechnologyID");

                    b.ToTable("DeveloperTechnologies");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.FunctionalityBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoardID");

                    b.ToTable("FunctionalityBlocks");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Payment")
                        .HasColumnType("int");

                    b.Property<Guid>("ProjectDetailID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectDetailID")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.ProjectDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProjectDetails");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.ProjectDeveloper", b =>
                {
                    b.Property<Guid>("ProjectID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DeveloperID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectID", "DeveloperID");

                    b.HasIndex("DeveloperID");

                    b.ToTable("ProjectDevelopers");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.ProjectTechnology", b =>
                {
                    b.Property<Guid>("ProjectID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TechnologyID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectID", "TechnologyID");

                    b.HasIndex("TechnologyID");

                    b.ToTable("ProjectTechnologies");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FunctionalityBlockID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FunctionalityBlockID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Members")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.TeamDeveloper", b =>
                {
                    b.Property<Guid>("DeveloperID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DeveloperID", "TeamID");

                    b.HasIndex("TeamID");

                    b.ToTable("TeamDevelopers");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Technology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Framework")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Board", b =>
                {
                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Project", "Project")
                        .WithOne("Board")
                        .HasForeignKey("ProjectCollaborationPlatform.Data.Models.Board", "ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.DeveloperTechnology", b =>
                {
                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Developer", "Developer")
                        .WithMany("DeveloperTechnologies")
                        .HasForeignKey("DeveloperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Technology", "Technology")
                        .WithMany("DeveloperTechnologies")
                        .HasForeignKey("TechnologyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Technology");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.FunctionalityBlock", b =>
                {
                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Board", "Board")
                        .WithMany("FunctionalityBlocksID")
                        .HasForeignKey("BoardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Project", b =>
                {
                    b.HasOne("ProjectCollaborationPlatform.Data.Models.ProjectDetail", "ProjectDetail")
                        .WithOne("Project")
                        .HasForeignKey("ProjectCollaborationPlatform.Data.Models.Project", "ProjectDetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectDetail");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.ProjectDeveloper", b =>
                {
                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Developer", "Developer")
                        .WithMany("ProjectDevelopers")
                        .HasForeignKey("DeveloperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Project", "Project")
                        .WithMany("ProjectDevelopers")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.ProjectTechnology", b =>
                {
                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Project", "Project")
                        .WithMany("ProjectTechnologies")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Technology", "Technology")
                        .WithMany("ProjectTechnologies")
                        .HasForeignKey("TechnologyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Technology");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Task", b =>
                {
                    b.HasOne("ProjectCollaborationPlatform.Data.Models.FunctionalityBlock", "FunctionalityBlock")
                        .WithMany("Tasks")
                        .HasForeignKey("FunctionalityBlockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FunctionalityBlock");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.TeamDeveloper", b =>
                {
                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Developer", "Developer")
                        .WithMany("TeamDevelopers")
                        .HasForeignKey("DeveloperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectCollaborationPlatform.Data.Models.Team", "Team")
                        .WithMany("TeamDevelopers")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Board", b =>
                {
                    b.Navigation("FunctionalityBlocksID");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Developer", b =>
                {
                    b.Navigation("DeveloperTechnologies");

                    b.Navigation("ProjectDevelopers");

                    b.Navigation("TeamDevelopers");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.FunctionalityBlock", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Project", b =>
                {
                    b.Navigation("Board")
                        .IsRequired();

                    b.Navigation("ProjectDevelopers");

                    b.Navigation("ProjectTechnologies");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.ProjectDetail", b =>
                {
                    b.Navigation("Project")
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Team", b =>
                {
                    b.Navigation("TeamDevelopers");
                });

            modelBuilder.Entity("ProjectCollaborationPlatform.Data.Models.Technology", b =>
                {
                    b.Navigation("DeveloperTechnologies");

                    b.Navigation("ProjectTechnologies");
                });
#pragma warning restore 612, 618
        }
    }
}
